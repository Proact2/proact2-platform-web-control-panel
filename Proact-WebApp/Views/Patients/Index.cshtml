@model IEnumerable<Proact_WebApp.Models.PatientModel>

@{
    ViewData["Title"] = "Patients";
}

<p>
    <div class="row">
        <div class="col-10"></div>
        <div class="col-2">
            <a class="btn btn-block btn-success" asp-action="Create"><i class="fas fa-user-plus"></i> Create new</a>
        </div>
    </div>
</p>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">All patients</h3>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <table id="UsersTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th style="width:100px">
                                @Html.DisplayNameFor(model => model.State)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                ID
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MedicalTeam)
                            </th>

                            <th>
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <partial name="_SubscriptionStateBadge" model="item.State" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    <div><small><strong>@Html.DisplayNameFor(model => model.Code):</strong> @Html.DisplayFor(modelItem => item.Code)</small></div>
                                    <div><small><strong>@Html.DisplayNameFor(model => model.UserId):</strong> @Html.DisplayFor(modelItem => item.UserId)</small></div>
                                    <div><small><strong>@Html.DisplayNameFor(model => model.AccountId):</strong> @Html.DisplayFor(modelItem => item.AccountId)</small></div>
                                </td>

                                <td>
                                    @if (item.IsAssociatedToMedicalTeam)
                                    {
                                        //@Html.DisplayFor(modelItem => item.MedicalTeam.Name)
                                    }
                                    else
                                    {
                                        <div><span class="badge bg-info">No medical team associated</span></div>
                                        <div>
                                            <a asp-action="Associate"
                                               asp-controller="MedicalTeamPatients"
                                               asp-route-UserId="@item.UserId"
                                               class="btn btn-outline-info btn-xs">Add to a medical Team</a>
                                        </div>
                                    }
                                </td>

                                <td>
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-info">Action</button>
                                        <button type="button" class="btn btn-info dropdown-toggle dropdown-icon" data-toggle="dropdown">
                                            <span class="sr-only">Toggle Dropdown</span>
                                        </button>
                                        <div class="dropdown-menu" role="menu">
                                            <a data-toggle="modal" data-target="#modal-default"
                                               id="@item.UserId"
                                               class="deleteItem dropdown-item">
                                                Delete
                                            </a>
                                        </div>
                                      

                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th>
                                ID
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MedicalTeam)
                            </th>

                            <th>
                                Actions
                            </th>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <!-- /.card-body -->
        </div>
    </div>
</div>

<div class="modal fade" id="modal-default">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Confirm</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Do you want to delete this User?</p>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                @using (Html.BeginForm("Delete", "Patients", FormMethod.Post))
                {
                    <input type="hidden" name="userId" id="userIdToRemove" />
                    <button id="btnContinueDelete" type="submit" class="btn btn-danger">Delete</button>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <!-- DataTables  & Plugins -->
    <script src="~/lib/datatables/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/lib/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/lib/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/lib/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/lib/jszip/jszip.min.js"></script>
    <script src="~/lib/pdfmake/pdfmake.min.js"></script>
    <script src="~/lib/pdfmake/vfs_fonts.js"></script>
    <script src="~/lib/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/lib/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/lib/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script>$(function () {
            $("#UsersTable").DataTable({
                "responsive": true, "lengthChange": false, "autoWidth": false,
                "buttons": ["excel", "pdf", "print", "colvis"]
            }).buttons().container().appendTo('#UsersTable_wrapper .col-md-6:eq(0)');
        });</script>

    <script>$('.deleteItem').click(function (e) {
            var userId = $(this).attr('id');
            $('#userIdToRemove').val(userId);

        });</script>
}
